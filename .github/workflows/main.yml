# Basic workflow to get started with workflow

# name: Maven CI/Cd

# on: 
#  push:
#   branches: [ master ]
#  pull_request:
#   branches: [ master ]

# jobs:
#  build_and_test:
#   runs-on: ubuntu latest

#   steps:
#    - name: file check
#      uses: actions/checkout@v2

#    - name: setup jdk 14
#      uses: actions/setup-java@v1
#      with:
#        java-version: 14

#    - name: build project with maven
#      run: mvn -B package --file pom.xml

# name: Maven CI/CD

# on:
#  push:
#     branches: [ master ]
#  pull_request:
#     branches: [ master ]

# jobs:
#   build_and_test:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up JDK 14
#       uses: actions/setup-java@v1
#       with:
#         java-version: 14
#     - name: Cache the Maven packages to speed up build
#       uses: actions/cache@v1
#       with:
#         path: ~/.m2
#         key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#         restore-keys: ${{ runner.os }}-m2 
#     - name: Build project with Maven
#       run: mvn -B package --file pom.xml


name: Android CI
on:
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # Execute unit tests
      - name: Unit Test
        run: ./gradlew testDebugUnitTest

      - name: Android Test Report
        uses: asadmansr/android-test-report-action@v1.2.0
        if: ${{ always() }} # IMPORTANT: run Android Test Report regardless
